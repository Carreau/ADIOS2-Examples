% Define two arrays, a global scalar value and a local value (scalar that every process write)
% Use this configuration with running dataGenerator with only 2 dimensional decomposition
% i.e. Z=V=W=1, and X*Y = number of processes e.g.
% mpirun -n 12 ./dataGenerator datagen_01.txt 4 3 


% Number of processes are divided up in dataGenerator for max 5 dimensional decomposition
% referred as X, Y, Z, V, W, where X*Y*Z*V*W = number of processes
% For every array, the decompositions must match the number of processes
% E.g.  XY  Z       is a 2D decomposition of a 2D array
%       XY  Z  1    is a 2D decomposition of a 3D array
% assuming the V=W=1 when dataGenerator is launched, and X*Y*Z equals the number of processes



# item  type    varname     N   [gdim1 gdim2 ... gdimN  decomp1 decomp2 ... decompN]

array   double  a           2    100   200              X       Y
array   float   b           1    100                    XY 

#globalv int8     nproc
#localv  int     rank

# Specify the number of output steps and the sleep time between steps in seconds
steps   3
sleep   2

